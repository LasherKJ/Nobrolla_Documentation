'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/features/audio-format/','title':"Audio Format",'section':"Features",'content':"Audio Format The Nobrolla API Audio Format feature analyzes the audio of a video and returns the detected format\n 5.1 5.1 Mono 5.1 Stereo.1 Stereo 5.1.1 Stereo Mono Stereo Pairs  Request JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;AUDIO_FORMAT\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;audioFormatConfig\u0026#34;:{ \u0026#34;compressed_channels\u0026#34;:[0,1,..] } } } Options    Attribute Type Default Description     compressed_channels [num,num,\u0026hellip;] [empty array] Array of channels to allow compressed audio    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;audioFormatAnnotations\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; }, \u0026#34;audioFormat\u0026#34;:\u0026#34;5.1\u0026#34; } ]}, {\u0026#34;audioFormatAnnotations\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;30.88s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;51.09s\u0026#34; }, \u0026#34;audioFormat\u0026#34;:\u0026#34;5.1 Stereo.1\u0026#34; } ]}, ] } "});index.add({'id':1,'href':'/features/audio-loss/','title':"Audio Loss",'section':"Features",'content':"Audio Loss The Nobrolla API Audio Loss feature analyzes video and searches for segments of video where audio would be expected, but is not being played.\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;AUDIO_LOSS\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;audioLossConfig\u0026#34;:{ \u0026#34;delay\u0026#34;:3.5, \u0026#34;silence_level\u0026#34;:.003, \u0026#34;track\u0026#34;:[0,1,..] } } } Options    Attribute Type Default Description     delay float 7.0 Amount of time audio is allowed to be silent before an alarm is triggered   silence_level float .001 Audio levels used for silence   track [num, num, \u0026hellip;] [0,1,\u0026hellip;,16] Array of tracks to monitor    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;audioLossAnnotations\u0026#34;:[ { \u0026#34;tracks\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;10.88s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;18.09s\u0026#34; } } ] } ]}, {\u0026#34;audioLossAnnotiations\u0026#34;:[ {\u0026#34;tracks\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;35.21s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;40.98s\u0026#34; } } ] } ]} ] } "});index.add({'id':2,'href':'/features/in-black/','title':"In Black",'section':"Features",'content':"In Black The Nobrolla API In Black feature analyzes video and searches for segments where video and audio would be expected, but no audio is being generated and the image is black.\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;IN_BLACK\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;inBlackConfig\u0026#34;:{ \u0026#34;delay\u0026#34;:1, \u0026#34;black_value\u0026#34;:.02 } } } Options    Attribute Type Default Description     delay float 7.0 Amount of time in black is allowed before feature is triggered   black_value float .001 Brightness value used for black    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;inBlackAnnotations\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]}, {\u0026#34;inBlackAnnotations\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;30.88s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;51.09s\u0026#34; } } ]}, ] } "});index.add({'id':3,'href':'/features/logo-recognition/','title':"Logo Recognition",'section':"Features",'content':"Logo Recognition The Nobrolla API Logo Recognition feature analyzes video to detect logos\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;LOGO_RECOGNITION\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;logoRecognitionConfig\u0026#34;:{ \u0026#34;logos\u0026#34;:[\u0026#34;logo1.jpg\u0026#34;,\u0026#34;logo3.jpg\u0026#34;] } } } Options    Attribute Type Default Description     logos [\u0026ldquo;file-uri\u0026rdquo;,\u0026hellip; [empty array] Logos to track. An empty array tracks all logos known by the NVS system    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;logoRecognitionAnnotations\u0026#34;:[ { \u0026#34;entity\u0026#34;:{ \u0026#34;description\u0026#34;:\u0026#34;Nobrolla Video Systems\u0026#34; }, \u0026#34;confidence\u0026#34;:\u0026#34;0.9564\u0026#34;, \u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]} ] } "});index.add({'id':4,'href':'/features/shot-change/','title':"Shot Change",'section':"Features",'content':"Shot Change Detection The Nobrolla API Shot Change feature analyzes video and searches for a shot change.\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;SHOT_CHANGE_DETECTION\u0026#34;] } Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;shotChangeAnnotiations\u0026#34;:[ { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;0s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;1.19s\u0026#34; }, { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;42.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;59.59s\u0026#34; }, { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;120.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;122.35s\u0026#34; } ]} ] } "});index.add({'id':5,'href':'/features/text-detection/','title':"Text Detection",'section':"Features",'content':"Text Detection The Nobrolla API In Black feature analyzes video and searches for segments where video and audio would be expected, but no audio is being generated and the image is black.\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;TEXT_DETECTION\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;textDetectionConfig\u0026#34;:{ \u0026#34;languagHints\u0026#34;:\u0026#34;spanish\u0026#34; } } } Options    Attribute Type Default Description     languageHints enum (\u0026ldquo;english\u0026rdquo;, \u0026ldquo;spanish\u0026rdquo;, \u0026ldquo;any\u0026rdquo;) \u0026ldquo;english\u0026rdquo; Language to detect.    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;textDetectionAnnotations\u0026#34;:[ { \u0026#34;text\u0026#34;:\u0026#34;Grand Opening!\u0026#34;, \u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;2.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;13.19s\u0026#34; }, \u0026#34;language\u0026#34;:\u0026#34;english\u0026#34;, \u0026#34;confidence\u0026#34;:0.976623, \u0026#34;frames\u0026#34;:[ { \u0026#34;rotatedBoundingBox\u0026#34;: { \u0026#34;vertices\u0026#34;: [ { \u0026#34;x\u0026#34;: 0.70960, \u0026#34;y\u0026#34;: 0.60413 }, { \u0026#34;x\u0026#34;: 0.89520, \u0026#34;y\u0026#34;: 0.50328 }, { \u0026#34;x\u0026#34;: 0.95076, \u0026#34;y\u0026#34;: 0.41787 }, { \u0026#34;x\u0026#34;: 0.68454, \u0026#34;y\u0026#34;: 0.62124 } ], }, \u0026#34;timeOffset\u0026#34;:\u0026#34;2.22s\u0026#34; }, { \u0026#34;rotatedBoundingBox\u0026#34;: { \u0026#34;vertices\u0026#34;: [ { \u0026#34;x\u0026#34;: 0.70960, \u0026#34;y\u0026#34;: 0.60413 }, { \u0026#34;x\u0026#34;: 0.89520, \u0026#34;y\u0026#34;: 0.50328 }, { \u0026#34;x\u0026#34;: 0.95076, \u0026#34;y\u0026#34;: 0.41787 }, { \u0026#34;x\u0026#34;: 0.68454, \u0026#34;y\u0026#34;: 0.62124 } ], }, \u0026#34;timeOffset\u0026#34;:\u0026#34;2.54s\u0026#34; }, ... ] } ]} ] } "});index.add({'id':6,'href':'/features/video-quality/','title':"Video Quality",'section':"Features",'content':"Video Quality The Nobrolla API Video Quality feature analyzes video and searches for segments where video and audio quality drop.\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;VIDEO_QUALITY\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;videoQualityConfig\u0026#34;:{ \u0026#34;minimum\u0026#34;:0.9 } } } Options    Attribute Type Default Description     MINIMUM float 0.1 - 1 .5 The minimum quality level allowed    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;videoQualityAnnotations\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; }, \u0026#34;value\u0026#34;:0.4 } ]}, {\u0026#34;videoQualityAnnotations\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;19.20s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;21.09s\u0026#34; }, \u0026#34;value\u0026#34;:0.1 } ]}, ] } "});index.add({'id':7,'href':'/features/template/','title':"Template",'section':"Features",'content':"TITLE The Nobrolla API In TITLE feature DOES THINGS\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;TITLE_GOES_HERE\u0026#34;], \u0026#34;options\u0026#34;:[{\u0026#34;TITLE_GOES_HERE\u0026#34;:object}] } Options    Attribute Type Default Description     attribute type \u0026ldquo;default value Description of attribute    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;titleAnnotions\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]}, ] } "});index.add({'id':8,'href':'/features/ad-placement-suggestion/','title':"Ad Placement Suggestion",'section':"Features",'content':"Ad Placement Suggestion The Nobrolla API Ad Placement Suggestion feature analyzes video looking for scene changes or periods in black, and suggests the best placement for ads.\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;AD_PLACEMENT_SUGGESTION\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;adPlacementConfig\u0026#34;:{ \u0026#34;ad_spot\u0026#34;:\u0026#34;file-uri.mp4\u0026#34; } } } Options    Attribute Type Default Description     ad spot fileUri none The file of the ad    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;adPlacementSuggestion\u0026#34;:[ {\u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]}, ] } "});index.add({'id':9,'href':'/features/celebrity-recognition/','title':"Celebrity Recognition",'section':"Features",'content':"TITLE The Nobrolla API In Celebrity Recognition feature analyzes video looking for a specific person or persons\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;CELEBRITY_RECOGNITION\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;celebrityRecognitionConfig\u0026#34;:{ \u0026#34;model\u0026#34;:[\u0026#34;face.jpg\u0026#34;,\u0026#34;face2.jpg\u0026#34;] } } } Options    Attribute Type Default Description     model [\u0026ldquo;fileUri\u0026rdquo;,\u0026ldquo;fileUri\u0026rdquo;,\u0026hellip;] [empty array] Array of image files or video files of a celebrity. The more files provided, the more accurate the results    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;titleAnnotions\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.9981\u0026#34;, \u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]}, ] } "});index.add({'id':10,'href':'/docs/cores/','title':"Cores",'section':"Docs",'content':"Cores Cores are NVS objects that work on jobs. Each core is capable of running one job at a time. Cores can be assigned a live video feed or a job from the workflow.\nPOST /api/cores GET /api/cores GET /api/cores/[name] PUT /api/cores/[name]* DELETE /api/cores/[name] "});index.add({'id':11,'href':'/docs/jobs/','title':"Jobs",'section':"Docs",'content':"Jobs Jobs can be sent to the workflow and be processed automatically based on availability.\n Facial Detection Audio Loss Audio Format Audio Language Video Quality Video Source indexing Shot Change Detection Text Detection Explicit Content Detection Logo Recognition Celebrity Recognition Person Detection Ad Placement Suggestion Lip Sync Detection Video Indexing  Making a request    Attribute Type Description     inputUri string Location of target file (required if no inputContent attribute)   inputContent string base64 encoded string(required if no inputUri attribute)   features [enum,\u0026hellip;] An array of Features   videoContext object an object of options for the job   outputUri string a filename to write the returned output to    { \u0026#34;inputUri\u0026#34;: string, \u0026#34;inputContent\u0026#34;: string, \u0026#34;features\u0026#34;: [enum (Feature)], \u0026#34;videoContext\u0026#34;:{object (videoContext)}, \u0026#34;outputUri\u0026#34;: string } Video Context The videoContext object defines parameters for the job request\n   Attribute Type Description     segments[] array Segments of the video to process. Segments can overlap. If not included, the entire video will be analyzed   pri (optional) num (0-139) Priority of the feature. Default is 20   audioFormatConfig object Audio Format options   audioLossConfig object Audio Loss options   inBlackConfig object In Black options   shotChangeConfig object Shot Change options   textDetectionConfig object Text Detection options   videoQualityConfig object Video Quality options   logoRecognitionConfig object Logo Recognition options   celebrityRecognitionConfig object Celebrity Recognition options   personRecognitionConfig object Person Recognition options   adPlacementSuggestinConfig object Ad Placement Suggestion options   lipSyncDetectionCongif object Lip Sync Detection options    { \u0026#34;inputUri\u0026#34;: string, \u0026#34;inputContent\u0026#34;: string, \u0026#34;features\u0026#34;: [enum (Feature)], \u0026#34;videoContext\u0026#34;:{ segments:[ { startTimeOffset:\u0026#39;0s\u0026#39;, endTimeOffset:\u0026#39;33.06s\u0026#39; } ], pri:130, inBlackConfig:{object}, logoRecognitionConfig:{object} }, \u0026#34;outputUri\u0026#34;: string } "});index.add({'id':12,'href':'/features/lip-sync/','title':"Lip Sync Detection",'section':"Features",'content':"Lip Sync Detection The Nobrolla API Lip Sync Detection feature analyzes video and audio and searches for segments where the two do not line up\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;LIP_SYNC_DETECTION\u0026#34;] } Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;lipSyncDetectionAnnotions\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.8238\u0026#34;, \u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]}, ] } "});index.add({'id':13,'href':'/docs/longrunningjobs/','title':"Long Running Jobs",'section':"Docs",'content':"Long Running Jobs Long running jobs return real-time data from the Nobrolla Video System as it analyzes video and can be used for live video streams, or for videos with a long duration. Instead of returning the results of jobs once the video is finished being analyzed, long running jobs return data over a websocket in real time as well as returning the entirety of the results when the video is complete or the live video source is terminated.\nInitializing a websocket function doThing(){ var url = /*your server url*/ var websocket = new WebSocket(url) websocket.onmessage = function (event) { console.log(event.data) } } Handling the onmessage event The onmessage event will return the JSON from the NVS api, and contain the results from the jobs applied to the media.\n"});index.add({'id':14,'href':'/docs/nobrolla-api/','title':"Nobrolla API",'section':"Docs",'content':"Nobrolla Video System API The Nobrolla Video System (NVS) API documentation encompasses REST commands for creating jobs and work flows. While there is a User Interface accessible from your Gentoo Server, this documentation covers the end-points you can use to send commands directly to Gentoo.\nCores POST /api/cores GET /api/cores GET /api/cores/[name] PUT /api/cores/[name]* DELETE /api/cores/[name] Cores are NVS objects that work on jobs. Each core is capable of running one job at a time.\nCores can be assigned a live video feed or a job from the workflow\nJobs Jobs can be sent to a specific core, or join the workflow and be assigned a core automatically based on availability\nJobs:  Facial Detection Audio Loss Audio Format Audio Language Video Quality Video Source indexing Shot Change Detection Text Detection Explicit Content Detection Logo Recognition Celebrity Recognition Person Detection Ad Placement Suggestion Lip Sync Detection Video Indexing  "});index.add({'id':15,'href':'/features/person-recognition/','title':"Person Recognition",'section':"Features",'content':"Person Recognition The Nobrolla API Person Recognition feature analyzes video searching for a specific person\nRequest JSON body { \u0026#34;inputUri\u0026#34;: \u0026#34;input-uri\u0026#34;, \u0026#34;features\u0026#34;:[\u0026#34;PERSON_RECOGNITION\u0026#34;], \u0026#34;videoContext\u0026#34;:{ \u0026#34;personRecognitionConfig\u0026#34;:{ \u0026#34;model\u0026#34;:[\u0026#34;face.jpg\u0026#34;,\u0026#34;face2.jpg\u0026#34;] } } } Options    Attribute Type Default Description     model [\u0026ldquo;fileUri\u0026rdquo;,\u0026ldquo;fileUri\u0026rdquo;,\u0026hellip;] [empty array] Array of image files or video files of a person. The more files provided, the more accurate the results    Nobrolla API JSON return { \u0026#34;results\u0026#34;:[ {\u0026#34;titleAnnotions\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.9981\u0026#34;, \u0026#34;segment\u0026#34;: { \u0026#34;startTimeOffset\u0026#34;:\u0026#34;12.22s\u0026#34;, \u0026#34;endTimeOffset\u0026#34;:\u0026#34;19.19s\u0026#34; } } ]}, ] } "});index.add({'id':16,'href':'/docs/workflow/','title':"Workflows",'section':"Docs",'content':"Workflows "});})();